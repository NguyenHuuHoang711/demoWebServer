services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
      - ./backend/logs:/app/backend/logs
    environment:
      - NODE_ENV=${NODE_ENV}
      - MONGO_URL=${MONGO_URL}
      - HOST=${HOST}
      - PORT=${PORT}
      - API_VERSION=${API_VERSION}
      - JWT_SECRET=${JWT_SECRET}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_FROM_EMAIL=${SENDGRID_FROM_EMAIL}
      - PARTNER_CODE=${PARTNER_CODE}
      - ACCESS_KEY=${ACCESS_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ENDPOINT=${ENDPOINT}
      - RETURN_URL=${RETURN_URL}
      - MEILISEARCH_HOST=${MEILISEARCH_HOST}
      - MEILISEARCH_API_KEY=${MEILISEARCH_API_KEY}
    env_file:
      - .env
    depends_on:
      - mongodb
      - meilisearch
  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    command: ["--replSet", "rs0"]

  mongors-init:
    image: mongo:latest
    depends_on:
      - mongodb
    entrypoint: >
      bash -c "
        sleep 5;
        mongosh --host mongodb --eval '
          try {
            rs.initiate({ _id: \"rs0\", members: [{ _id: 0, host: \"mongodb:27017\" }] })
          } catch(e) {
            print(e.message)
          }'
      "
    restart: "no"

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: meilisearch
    ports:
      - "7701:7700"
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_API_KEY}
    volumes:
      - meili_data:/meili_data

volumes:
  mongodb_data:
  meili_data: