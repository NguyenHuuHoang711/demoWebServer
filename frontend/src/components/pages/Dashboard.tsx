import React, { useEffect, useState } from "react";
import { Bar } from "react-chartjs-2";
import { Store, LogOut, MessageCircle } from 'lucide-react';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  BarElement,
  Tooltip,
  Legend,
} from "chart.js";
import "../../assets/css/Dashboard.css";
import { useNavigate } from 'react-router-dom';

ChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend);

const Dashboard = () => {
  const [userCount, setUserCount] = useState<number>(0);
  const [activeSection, setActiveSection] = useState('dashboard');
  const navigate = useNavigate();

  const handleLogout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('role');
    localStorage.removeItem('userId');
    navigate('/login');
  };

  useEffect(() => {
    const fetchUserCount = async () => {
      try {
        const response = await fetch("http://localhost:3000/api/v1/users");
        const data = await response.json();
        if (Array.isArray(data.data)) {
          const users = data.data.filter((user: any) => user.role !== "admin");
          setUserCount(users.length);
        } else if (typeof data.count === "number") {
          setUserCount(data.count);
        } else {
          setUserCount(0);
        }
      } catch (error) {
        console.error("L·ªói khi t·∫£i danh s√°ch ng∆∞·ªùi d√πng:", error);
      }
    };

    fetchUserCount();
  }, []);

  const chartData = {
    labels: [
      "JAN", "FEB", "MAR", "APR", "MAY", "JUN",
      "JUL", "AUG", "SEP", "OCT", "NOV", "DEC",
    ],
    datasets: [
      {
        label: "Activity",
        data: [100, 150, 200, 180, 250, 220, 280, 300, 270, 320, 340, 360],
        backgroundColor: "#4f46e5",
        borderRadius: 4,
      },
    ],
  };

  return (
    <div className="dashboard">
      <aside className="sidebar">
        <div className="sidebar-header">üõí C·ª≠a H√†ng ƒê·∫∑c S·∫£n</div>
        <nav className="sidebar-menu">
          <div onClick={() => setActiveSection('dashboard')} className="menu-highlight">üìä B√°o c√°o</div>
          <div onClick={() => setActiveSection('chat')}><MessageCircle size={18}/> Khung chat</div>
          <div onClick={() => setActiveSection('users')}>üë• Qu·∫£n l√Ω ng∆∞·ªùi d√πng</div>
          <div onClick={() => setActiveSection('products')}>üì¶ Qu·∫£n l√Ω s·∫£n ph·∫©m</div>
          <div onClick={() => setActiveSection('posts')}>üìù Qu·∫£n l√Ω b√†i vi·∫øt</div>
          <div onClick={() => setActiveSection('categories')}>üìÅ Qu·∫£n l√Ω danh m·ª•c</div>
          <div onClick={() => setActiveSection('coupons')}>üìÅ Qu·∫£n l√Ω m√£ khuy·∫øn m√£i</div>
          <div onClick={() => setActiveSection('stores')}><Store size={18} /> Gian h√†ng h·ª£p t√°c</div>
          <div onClick={handleLogout} style={{ cursor: 'pointer', display: 'flex', alignItems: 'center', gap: '6px' }}>
            <LogOut size={18} /> ƒêƒÉng Xu·∫•t
          </div>
        </nav>
        <div className="sidebar-footer">
          <div>‚öôÔ∏è C√†i ƒë·∫∑t</div>
          <div className="user-info">Hoang<br />hoang123@gmail.com</div>
        </div>
      </aside>

      <main className="main-content">
        <h1 className="title">
          {activeSection === 'dashboard' && 'üìà Th·ªëng k√™'}
          {activeSection === 'products' && 'üì¶ Qu·∫£n l√Ω s·∫£n ph·∫©m'}
          {activeSection === 'users' && 'üë• Qu·∫£n l√Ω ng∆∞·ªùi d√πng'}
          {activeSection === 'chat' && 'üí¨ Khung chat'}
          {activeSection === 'posts' && 'üìù B√†i vi·∫øt'}
          {activeSection === 'categories' && 'üìÅ Danh m·ª•c'}
          {activeSection === 'coupons' && 'üè∑Ô∏è M√£ khuy·∫øn m√£i'}
          {activeSection === 'stores' && 'üè™ Gian h√†ng'}
        </h1>

        {/* N·ªôi dung t·ª´ng ph·∫ßn */}
        {activeSection === 'dashboard' && (
          <>
            <div className="filters">
              <select><option value="all">Th·ªùi gian: T·ª´ tr∆∞·ªõc t·ªõi nay</option></select>
              <select><option value="all">Nh√≥m Kh√°ch H√†ng: T·∫•t c·∫£</option></select>
              <select><option value="all">M·∫∑t h√†ng: T·∫•t c·∫£</option></select>
            </div>

            <div className="n1">
              <div className="stats-grid">
                <StatCard title="Ng∆∞·ªùi d√πng" value={`${userCount} ng∆∞·ªùi`} />
                <StatCard title="C√¢u h·ªèi" value="3,298" />
                <StatCard title="S·ªë l∆∞·ª£t ƒë√°nh gi√°" value="5,000" />
                <StatCard title="T·ªïng doanh thu" value="2,000,000 VNƒê" />
                <StatCard title="M·ª©c tƒÉng tr∆∞·ªüng" value="3%" />
                <StatCard title="ƒê∆°n h√†ng ch·ªù" value="2,000" />
              </div>

              <div className="charts-grid">
                <div className="full-span">
                  <div className="n2">
                    <h2>Activity</h2>
                    <select>
                      <option value="ngay">Ng√†y</option>
                      <option value="thang">Th√°ng</option>
                      <option value="nam">NƒÉm</option>
                    </select>
                  </div>
                  <Bar data={chartData} />
                </div>
              </div>
            </div>

            <br />

            <div className="n3">
              <div className="card2">
                <h2>Ch·ªß ƒë·ªÅ hot</h2>
                <Progress label="tr√°i c√¢y" percent={95} image="/images/top/Rectangle 2370.png" />
                <Progress label="qu√† l∆∞u ni·ªám" percent={92} image="/images/top/Rectangle 2370.png" />
                <Progress label="ƒë·ªì ƒÉn kh√¥" percent={89} image="/images/top/Rectangle 2370.png" />
              </div>

              <div className="bottom-grid">
                <div className="card1">
                  <h2>Top s·∫£n ph·∫©m</h2>
                  <Progress label="Food Safety" percent={74} color="red" />
                  <Progress label="Compliance Basics Procedures" percent={52} color="yellow" />
                  <Progress label="Company Networking" percent={36} color="pink" />
                </div>
              </div>
            </div>

            <br />
            <br />

            <div className="card">
              <h2>B·∫£ng x·∫øp h·∫°ng ng∆∞·ªùi d√πng</h2>
              <div className="ranking">
                <div>A - 92% Correct <span className="up">‚ñ≤</span></div>
                <div>B - 89% Correct <span className="down">‚ñº</span></div>
              </div>
            </div>
          </>
        )}

        {/* C√°c m·ª•c kh√°c, v√≠ d·ª• products */}
        {activeSection === 'products' && (
          <div className="card">
            <h2>Danh s√°ch s·∫£n ph·∫©m (demo)</h2>
            <ul>
              <li>S·∫£n ph·∫©m 1 - Gi√°: 100.000ƒë</li>
              <li>S·∫£n ph·∫©m 2 - Gi√°: 150.000ƒë</li>
              <li>S·∫£n ph·∫©m 3 - Gi√°: 200.000ƒë</li>
            </ul>
          </div>
        )}
      </main>
    </div>
  );
};

const StatCard = ({ title, value }: { title: string; value: string }) => (
  <div className="card12">
    <div className="card-title">{title}</div>
    <div className="card-value">{value}</div>
  </div>
);

const Progress = ({
  label,
  percent,
  color = "green",
  image,
}: {
  label: string;
  percent: number;
  color?: string;
  image?: string;
}) => (
  <div className="progress-item">
    <div className="progress-label">
      <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
        {image && (
          <img
            src={image}
            alt={label}
            style={{
              width: '20px',
              height: '20px',
              borderRadius: '4px',
              objectFit: 'cover',
            }}
          />
        )}
        <span>{label}</span>
      </div>
      <span>{percent}%</span>
    </div>
    <div className="progress-bar">
      <div
        className={`progress-fill ${color}`}
        style={{ width: `${percent}%` }}
      ></div>
    </div>
  </div>
);

export default Dashboard;
